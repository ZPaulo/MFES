class Publication
types
	public	Date :: year : nat
									month: nat
									day : nat;
	public String = SISP`String;
instance variables

	private title: String; --this publication's title
	private release_date: Date; --release date of this publication
	private authors: set of Author; --co-Authors of this publication
	private citations: set of Publication; --publications this publication citates
	private citated: set of Publication; --publications that citate this publication
	private affiliations:	map Author to String; --affiliations of each author when doing this publication
	
	inv authors = dom affiliations;--all authors must have an affiliation and all authors with affiliation in this publication must be an author
	
--	inv forall a in set authors & (forall p in set a.getPublications() & a in set p.getAuthors()); intra-object invariant not properly supported by VDM++
operations

--creates a new publication and adds it to the author publications and the citated set of the publications it citates
--also verifies if this publication only citates older publications
--name : String : publication name
--date : Date : release date of publication
--auth : set of Author : set of authors that co-authed this publication
--cits : set of Publication : set of publication this publication citates
--aff  : map Author to String : afiliations of each worker
	public Publication: String * Date * set of Author * set of Publication * map Author to String==> Publication
		Publication(name,date,aut,cits,aff) ==
		(
			title:=name;
			release_date := date;
			authors:= aut;
			citations:=cits;
			citated:={};
			affiliations:=aff;
			for all c in set citations do
			(
				c.addCitated(self);
			);
			for all a in set authors do
			(
				a.addPublication(self);
			);
		)
		pre (dom aff = aut) and (forall a in set cits  & (date.year > a.getDate().year) or (date.year = a.getDate().year and date.month > a.getDate().month) or  (date.year = a.getDate().year and date.month = a.getDate().month and date.day > a.getDate().day));
	
	
--return the release date of this publication
	public pure getDate: () ==> Date
		getDate() ==
			return release_date;
		
--return a set containing the authors of this publication
	public pure getAuthors : () ==> set of Author
		getAuthors() ==
			return authors;		
--return a set containing the publications this publication citates
	public pure getCitations : () ==> set of Publication
		getCitations() ==
			return citations;
--return a set containing the publications that citate this publication		
	public pure getCitated : () ==> set of Publication
		getCitated() ==
			return citated;

--adds a publication citates this publication to the set of publications that citate this publication
--the publication must not be added yet to the set
--p : Publication that will be added to citated set
	private addCitated : Publication ==> ()
		addCitated(p) ==
			citated := citated union {p}
		pre p not in set citated
		post p in set citated;
	
		
end Publication