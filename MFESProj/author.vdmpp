class Author
types
	public String = SISP`String;
instance variables
	private publications: set of Publication;
	private name:String;
	private interests: set of String;
	
operations
	public Author: String ==> Author
		Author(str) ==
		(
			publications:={};
			interests:={};
			name:=str;
		);
		
	public pure getName: () ==> String
		getName() ==
		(
			return name
		);
		
	public pure getPublications: () ==> set of Publication
		getPublications() ==
		(
			return publications
		);	
		
	public addPublication: Publication ==> ()
		addPublication(pub) ==
		(
			publications := publications union {pub}
		)
		pre self in set pub.getAuthors() and pub not in set publications
		post pub in set publications;


	public pure getInterests: () ==> set of String
		getInterests() ==
		(
			return interests
		);	
		
	public addInterest: String ==> ()
		addInterest(interest) ==
		(
			interests:=interests union {interest}
		)
		pre interest not in set interests
		post interest in set interests;
		
	public pure getSelfCit: () ==> int
		getSelfCit() ==
		(
			dcl n:int;
			n:=0;
			for all p in set publications do 
			(
				for all c in set p.getCitations() do
				(
					if self in set c.getAuthors()
					then
						n := n + 1;
				);
			);
			return n;
		);
		
	public pure getCitatedOther:() ==> int
		getCitatedOther() ==
		(
			dcl n:int;
			n:=0;
			for all p in set publications do
				n:= n + card p.getCitated();
			n:=n-getSelfCit();
			return n;
		);
		
	public pure coAuthed:Author ==> bool
		coAuthed(a)==
		(
			for all p in set publications do
			(
				if a in set p.getAuthors()
				then return true
			);
			return false;
		);
end Author