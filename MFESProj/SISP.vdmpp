class SISP
types
	public	Date :: year : nat
									month: nat
									day : nat;
	public String = seq of char;
	
	public Path = seq of Author;

instance variables
	private publications : set of Publication;
	private authors : set of Author;

operations

	public SISP: () ==> SISP
		SISP() ==
		(
			publications:={};
			authors:={};
		);

	public addAuthor : Author ==> ()
		addAuthor(elem) ==
			authors := authors union {elem}
		pre elem not in set authors
		post elem in set authors;
	
	public pure getAuthors : () ==> set of Author
		getAuthors() ==
			return authors;
	
	public addPublication : Publication ==> ()
		addPublication(elem) ==
			publications := publications union {elem}
		pre elem not in set publications
		post elem in set publications;

	--TODO
	public pure getCoAuthorGraph : Author * Author ==> Path
		getCoAuthorGraph (a1,a2) == 
			return [];

	
end SISP